name: Tests (pytest)

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * 1"  # Weekly sanity check on Mondays (UTC)

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Read-only is enough (we don't push anything here)
permissions:
  contents: read

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]
        # NOTE: We test against the latest Home Assistant via the HA pytest plugin.
        # If you want a HA-version matrix, we can add it in a follow-up (pin homeassistant wheel).

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          # Core test stack (pin by minor where sensible)
          python -m pip install "pytest>=8" "pytest-cov>=5" "pytest-asyncio>=0.23"
          # Home Assistant test harness
          python -m pip install "pytest-homeassistant-custom-component>=0.13"
          # Optional project-specific requirements
          if [ -f requirements_test.txt ]; then python -m pip install -r requirements_test.txt; fi
          if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi

      - name: Run tests (with coverage)
        env:
          PYTHONWARNINGS: default
        run: |
          # Fail fast on the first error, show coverage summary and XML (for artifacts/bots)
          pytest -q --maxfail=1 --disable-warnings \
            --cov=custom_components.pollenlevels \
            --cov-report=term --cov-report=xml

      - name: Upload coverage.xml
        if: ${{ hashFiles('coverage.xml') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml
